{"version":3,"sources":["components/MathComponent.js","App.js","reportWebVitals.js","index.js"],"names":["MathComponent","props","useState","Math","ceil","random","num1","setNum1","num2","setNum2","score","setScore","isCorrect","setIsCorrect","gameType","setGameType","id","setId","handleGameType","e","target","value","className","Button","variant","onClick","onSubmit","preventDefault","console","log","userAnswer","parseInt","name","uuidv4","size","type","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAqEeA,EAjEO,SAACC,GAAU,MAGPC,mBAASC,KAAKC,KAAqB,GAAhBD,KAAKE,WAHjB,mBAGxBC,EAHwB,KAGlBC,EAHkB,OAIPL,mBAASC,KAAKC,KAAqB,GAAhBD,KAAKE,WAJjB,mBAIxBG,EAJwB,KAIlBC,EAJkB,OAKLP,mBAAS,GALJ,mBAKxBQ,EALwB,KAKjBC,EALiB,OAMGT,oBAAS,GANZ,mBAMxBU,EANwB,KAMbC,EANa,OAOCX,mBAAS,KAPV,mBAOxBY,EAPwB,KAOdC,EAPc,OAQXb,mBAAS,GARE,mBAQxBc,EARwB,KAQpBC,EARoB,KA0CvBC,EAAiB,SAACC,GACpBJ,EAAYI,EAAEC,OAAOC,QAGzB,OACI,sBAAKC,UAAU,OAAf,UACI,2CACA,iCACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,wBAAwBH,MAAM,IAAII,QAASP,EAA3D,iBACA,cAACK,EAAA,EAAD,CAAQC,QAAQ,wBAAwBH,MAAM,IAAII,QAASP,EAA3D,yBAEJ,+BAAKZ,EAAL,IAAYQ,EAAZ,IAAuBN,KAEvB,uBAAMkB,SA7CO,SAACP,GAClBA,EAAEQ,iBAEFd,GAAa,GACbe,QAAQC,IAAI,gBAAiBjB,GAE7BL,EAAQJ,KAAKC,KAAqB,GAAhBD,KAAKE,WACvBI,EAAQN,KAAKC,KAAqB,GAAhBD,KAAKE,WAEvB,IAAIyB,EAAaC,SAASZ,EAAEC,OAAOY,KAAKX,QAEb,MAAbP,EAAoBR,EAAOE,EAAOF,EAAOE,KAGzCsB,GAEVjB,GAAa,GACbF,EAASD,EAAO,GAChBS,EAAEC,OAAOY,KAAKX,MAAQ,KAEtBR,GAAa,GAEbI,EAAMgB,eACNd,EAAEC,OAAOY,KAAKX,MAAQ,KAsBtB,UACA,uBAAOa,KAAK,KAAKC,KAAK,OAAOH,KAAK,SAClC,cAACT,EAAA,EAAD,CAAQC,QAAQ,YAAYW,KAAK,SAAjC,uBAEA,qBAAcb,UAAWV,EAAY,UAAU,0BAA/C,SAA2EA,EAAY,UAAY,SAAzFI,GACV,yCAAYN,GAAS,GAAK,sCAAwCA,SC/C/D0B,MAbf,WAEE,OACE,qBAAKd,UAAU,MAAf,SAEI,qBAAKA,UAAU,kBAAf,SACA,cAAC,EAAD,SCEOe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.883f650a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst MathComponent = (props) => {\n    // let gameType = props.type;\n\n    let [num1, setNum1] = useState(Math.ceil(Math.random() * 10));\n    let [num2, setNum2] = useState(Math.ceil(Math.random() * 10));\n    let [score, setScore] = useState(0);\n    let [isCorrect, setIsCorrect] = useState(true);\n    let [gameType, setGameType] = useState('+');\n    let [id, setId] = useState(0);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        setIsCorrect(true);\n        console.log('Orignal State', isCorrect);\n \n        setNum1(Math.ceil(Math.random() * 10));\n        setNum2(Math.ceil(Math.random() * 10));\n        \n        let userAnswer = parseInt(e.target.name.value);\n\n        let answer = (gameType === \"+\") ? num1 + num2 : num1 * num2;\n        // console.log(answer === userAnswer);\n\n        if(answer === userAnswer) {\n            // console.log('Correct', isCorrect);\n            setIsCorrect(true);\n            setScore(score +1);\n            e.target.name.value = '';\n        } else {\n            setIsCorrect(false);\n            // console.log('Wrong Answer', isCorrect);\n            setId(uuidv4());\n            e.target.name.value = '';\n        }\n    }\n\n    // const getRandomKey = () => {\n    //     console.log('Get Random Key Ran');\n    //     setId(uuidv4());\n    // }\n\n    const handleGameType = (e) => {\n        setGameType(e.target.value)\n    }\n\n    return (\n        <div className=\"body\">\n            <h1>Math Quiz</h1>\n            <span>\n                <Button variant=\"outline-dark m-1 mb-3\" value=\"+\" onClick={handleGameType}>Add</Button>\n                <Button variant=\"outline-dark m-1 mb-3\" value=\"*\" onClick={handleGameType}>Multiply</Button>\n            </span>\n            <h2>{num1} {gameType} {num2}</h2>\n\n            <form onSubmit={handleSubmit}>\n            <input size=\"10\" type=\"text\" name=\"name\"></input>\n            <Button variant=\"secondary\" type=\"submit\">Submit</Button>\n            </form>\n            <div key={id} className={isCorrect ? 'fadeOut':'isFalse fadeInAnimation'}>{isCorrect ? 'CORRECT' : 'FALSE' }</div>\n            <h3>Score: {score >= 10 ? 'You are now the smartest man alive!' : score}</h3>\n        </div>\n    )\n}\n\nexport default MathComponent;","import './App.css';\n// import Jumbotron from 'react-bootstrap/Jumbotron';\nimport MathComponent from './components/MathComponent';\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      {/* <div className=\"container\"> */}\n        <div className=\"jumbotron-image\">\n        <MathComponent></MathComponent>\n        </div>\n      {/* </div> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}